#!/usr/bin/env python2
# edgy
# by Michael Goehler <somebody.here@gmx.de>
# ----------------------------------------------------------------------
# based on cb-hotcorners
# by Philip Newborough <corenominal@corenominal.org>
# ----------------------------------------------------------------------
# License:
#            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
#                    Version 2, December 2004
#
# Copyright (C) 2004 Sam Hocevar <sam@hocevar.net>
#
# Everyone is permitted to copy and distribute verbatim or modified
# copies of this license document, and changing it is allowed as long
# as the name is changed.
#
#            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
#   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
#
#  0. You just DO WHAT THE FUCK YOU WANT TO.
# ----------------------------------------------------------------------

from Xlib import display
import sys, time, os, ConfigParser

script = "edgy"

check_intervall = 0.1
radius = 30

width = display.Display().screen().width_in_pixels
height = display.Display().screen().height_in_pixels
top    = 0
left   = 0
right  = width - 1
bottom = height - 1

def print_usage():
    print(script+": usage:")
    print("  --help          show this message and exit")
    print("  --kill          attempt to kill any running instances")
    print("  --daemon        run daemon and listen for cursor triggers")
    print("")
    exit()

if len(sys.argv) < 2 or sys.argv[1] == "--help":
    print_usage()

elif sys.argv[1] == "--kill":
    print("attempting to kill any running instances")
    os.system('pkill -9 -f ' + script)
    exit()

elif sys.argv[1] == "--daemon":
    Config = ConfigParser.ConfigParser()
    rcfile = os.getenv("HOME") + "/." + script + "rc"
    disp = display.Display()
    root=display.Display().screen().root

    def mousepos():
        data = root.query_pointer()._data
        return data["root_x"], data["root_y"], data["mask"]

    try:
        cfgfile = open(rcfile)
    except IOError as e:
        cfgfile = open(rcfile,'w')
        Config.add_section('hot corners')
        Config.set('hot corners','top_left_corner_command', 'echo "top left corner detected"')
        Config.set('hot corners','top_right_corner_command', 'echo "top right corner detected"')
        Config.set('hot corners','bottom_right_corner_command', 'echo "bottom right corner detected"')
        Config.set('hot corners','bottom_left_corner_command', 'echo "bottom left corner detected"')
        Config.add_section('hot edges')
        Config.set('hot edges','left_edge_command', 'echo "left edge detected"')
        Config.set('hot edges','top_edge_command', 'echo "top edge detected"')
        Config.set('hot edges','right_edge_command', 'echo "right edge detected"')
        Config.set('hot edges','bottom_edge_command', 'echo "bottom edge detected"')
        Config.write(cfgfile)
        cfgfile.close()
        print(rcfile + " created")

    while True:
        Config.read(rcfile)
        time.sleep(check_intervall)
        pos = mousepos()

        # left edge
        if pos[0] == left and pos[1] > top + radius and pos[1] < bottom - radius:
            if Config.get('hot edges','left_edge_command') != '':
                os.system('(' + Config.get('hot edges','left_edge_command') + ') &')
                while pos[0] == left and pos[1] > top + radius and pos[1] < bottom - radius:
                    pos = mousepos()
                    time.sleep(check_intervall)

        # top left corner
        elif (pos[0] <= left + radius and pos[1] == top) or (pos[0] == left and pos[1] <= top + radius):
            if Config.get('hot corners','top_left_corner_command') != '':
                os.system('(' + Config.get('hot corners','top_left_corner_command') + ') &')
                while (pos[0] <= left + radius and pos[1] == top) or (pos[0] == left and pos[1] <= top + radius):
                    pos = mousepos()
                    time.sleep(check_intervall)

        # top edge
        elif pos[0] > left + radius and pos[0] < right - radius and pos[1] == top:
            if Config.get('hot edges','top_edge_command') != '':
                os.system('(' + Config.get('hot edges','top_edge_command') + ') &')
                while pos[0] > left + radius and pos[0] < right - radius and pos[1] == top:
                    pos = mousepos()
                    time.sleep(check_intervall)

        # top right corner
        elif (pos[0] >= right - radius and pos[1] == top) or (pos[0] == right and pos[1] <= top + radius):
            if Config.get('hot corners','top_right_corner_command') != '':
                os.system('(' + Config.get('hot corners','top_right_corner_command') + ') &')
                while (pos[0] >= right - radius and pos[1] == top) or (pos[0] == right and pos[1] <= top + radius):
                    pos = mousepos()
                    time.sleep(check_intervall)

        # right edge
        elif pos[0] == right and pos[1] > top + radius and pos[1] < bottom - radius:
            if Config.get('hot edges','right_edge_command') != '':
                os.system('(' + Config.get('hot edges','right_edge_command') + ') &')
                while pos[0] == right and pos[1] > top + radius and pos[1] < bottom - radius:
                    pos = mousepos()
                    time.sleep(check_intervall)

        # bottom right corner
        elif (pos[0] >= right - radius and pos[1] == bottom) or (pos[0] == right and pos[1] >= bottom - radius):
            if Config.get('hot corners','bottom_right_corner_command') != '':
                os.system('(' + Config.get('hot corners','bottom_right_corner_command') + ') &')
                while (pos[0] >= right - radius and pos[1] == bottom) or (pos[0] == right and pos[1] >= bottom - radius):
                    pos = mousepos()
                    time.sleep(check_intervall)

        # bottom edge
        elif pos[0] > left + radius and pos[0] < right - radius and pos[1] == bottom:
            if Config.get('hot edges','bottom_edge_command') != '':
                os.system('(' + Config.get('hot edges','bottom_edge_command') + ') &')
                while pos[0] > left + radius and pos[0] < right - radius and pos[1] == bottom:
                    pos = mousepos()
                    time.sleep(check_intervall)

        # bottom left corner
        elif (pos[0] <= left + radius and pos[1] == bottom) or (pos[0] == left and pos[1] >= bottom - radius):
            if Config.get('hot corners','bottom_left_corner_command') != '':
                os.system('(' + Config.get('hot corners','bottom_left_corner_command') + ') &')
                while (pos[0] <= left + radius and pos[1] == bottom) or (pos[0] == left and pos[1] >= bottom - radius):
                    pos = mousepos()
                    time.sleep(check_intervall)

else:
    print_usage()

